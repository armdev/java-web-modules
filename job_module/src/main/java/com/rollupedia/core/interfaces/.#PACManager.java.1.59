
package taxsystem.core.interfaces;

import java.util.Date;
import java.util.List;
import java.util.Map;

import taxsystem.core.dto.TaxConfigurationDTO;
import taxsystem.core.dto.TaxDeclarationDTO;
import taxsystem.core.dto.decls.CustomTransactionDTO;
import taxsystem.core.dto.decls.OverpaymentTransferDTO;
import taxsystem.core.dto.decls.PaybackDTO;
import taxsystem.core.dto.pac.PACDeclResultDTO;
import taxsystem.core.dto.pac.sr.PACMainReportDTO;
import taxsystem.core.dto.pac.sr.PACMainReportFilterDTO;
import taxsystem.core.dto.pac.PACTransactionDTO;
import taxsystem.core.dto.pac.PACViewReportDTO;
import taxsystem.core.dto.pac.PACardDTO;
import taxsystem.core.dto.pac.PACardReport;
import taxsystem.core.dto.pac.PacCardBalanceReportDTO;
import taxsystem.core.dto.pac.PacMessageLogDTO;
import taxsystem.core.dto.pac.sr.BaseSRDocumentDTO;
import taxsystem.core.dto.pac.sr.PACMainReportDateDTO;
import taxsystem.core.dto.pac.sr.PACSrMrRequestDTO;
import taxsystem.core.dto.pac.sr.PACSrMrRequestFilterDTO;
import taxsystem.core.types.ObligationPeriod;
import taxsystem.core.types.PACTransactionCode;
import taxsystem.core.types.PacSrPaymentGroupType;

/**
 *
 * @author Alik
 */
public interface PACManager {
	PACardDTO getCardById(long id);
	boolean addPACTransaction(PACTransactionDTO dto);
  
  boolean addPACTransactionsToCard(List<PACTransactionDTO> transList, PACardDTO cardDTO);
  boolean addPACTransactionsToCard(List<PACTransactionDTO> masterTransList, List<PACTransactionDTO> specialTransList, PACardDTO cardDTO);
  
  void addProfitTaxAnnualTransanction(PACTransactionDTO dto);
  PACardDTO createPAC(PACardDTO card, List<PACTransactionDTO> transactions, List<PACTransactionDTO> sFtransaction);
  
  PACardDTO createPAC(PACardDTO card, List<PACTransactionDTO> transactions, PACTransactionCode prepayType, double prepayAmount);
  TaxConfigurationDTO getTaxConfiguration(ObligationPeriod period, String taxCode, Integer taxYear);
  TaxDeclarationDTO getTaxDeclaration(ObligationPeriod period, String taxCode, Integer taxYear);
  PACardDTO getPACardByTinAndTaxType(String tin, String taxCode);
  List<PACardDTO> getTaxPayerPACards(String tin, boolean onlyMasters);
  List<PACardReport> getPACardReportList(Long cardId, Date reportDate);
  List<ObligationPeriod> getPeriodListByTaxCode(String taxCode,Date date);
  
  PACDeclResultDTO createPayback(PaybackDTO dto, String username);
  PACDeclResultDTO createOverpaymentTransfer(OverpaymentTransferDTO dto, String username);

  List<PacCardBalanceReportDTO> getBalanceReportsForPeriod(String tin, String taxType, Date fromDate, Date toDate) ;
  List<PacCardBalanceReportDTO> getCardBalanceReport(String distCode, String tin, String taxTypeCode, Date forDate) ;
  
  List<PacMessageLogDTO> getPacCardMessageLog(Long pacId) ;
  List<PACViewReportDTO> getPACViewReport(Long cardId, Date reportDate);
  
  Map<Integer, BaseSRDocumentDTO> loadCardDocuments(Long masterPacId) ;
  Double getCardOverpaymentForDate(long pacId, Date forDate, PacSrPaymentGroupType overpaymentType);
  
  boolean removePaymentByDocumentNumber(String docNumber);
  List<PACardDTO> findDirtyPac(int everyNth, int maxResult);
  String recalculatePac(PACardDTO card);
  String regenerateAllTransactions(PACardDTO card);
  PACDeclResultDTO createCustomTransaction(CustomTransactionDTO dto);
  
  List<PACMainReportDTO> getMainReport(long schedulerResultId) ;
  //PACMainReportSchedulerResultDTO scheduleMainReport(PACMainReportFilterDTO filter, boolean forceRecalculate) ;
  public byte[] getOverPaymentReport(String dln);
  boolean removeDocumentByDln(String dln);
  
  boolean removePrepaymentsAfter(String tin, String taxCode, Date activeFrom);
  boolean prepaymentExists(String tin, String taxCode, int taxYear, ObligationPeriod period, String docCode);

  List<PACMainReportDTO> getMainBriefReport(PACMainReportFilterDTO filter);
  List<PACMainReportDTO> getMainFullReport(PACMainReportFilterDTO filter);
  void resumeTaxPayersCards(String tin, Date resumeDate);
  void suspendTaxPayersCards(String tin, Date resumeDate);
  
  Double getLastPrepayment(PACardDTO cardDto, int year);
  Double getLastPrepaymentSumForYear(PACardDTO cardDto, int year);

  List<PACSrMrRequestDTO> getSrMrRequestList(PACSrMrRequestFilterDTO filter, Integer start, Integer count);
  Long getSrMrRequestCount(PACSrMrRequestFilterDTO filter);
  void calculateNewMainReport(Date dt, String comments, String username);

  List<PACMainReportDateDTO> getPacMainReportDateList();
  public byte[] getArrearMainReport(PACMainReportFilterDTO filter);
  public byte[] getArrearFullMainReport(PACMainReportFilterDTO filter);
  public byte[] getCustomTransactionPdf(String dln, Integer actionType);//ahq mshakum pdf
}
